name: Build, Test and Deploy React Application
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_test:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [21.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm ci and test
        working-directory: ./front
        run: |
          npm ci
          npm test
        env:
          REACT_APP_SERVER_URL: ${{ secrets.REACT_APP_SERVER_URL }}

      - name: Build the stack react
        run: |
          docker compose --version
          docker compose up -d
        env:
          REACT_APP_SERVER_URL: ${{ secrets.REACT_APP_SERVER_URL }}
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}

      - name: Run e2e tests with cypress
        with:
          working-directory: ./front
        uses: cypress-io/github-action@v6

      - name: Stop the stack react
        run: docker compose down
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Build React App
        working-directory: ./front
        run: npm run build
        env:
          REACT_APP_SERVER_URL: ${{ secrets.REACT_APP_SERVER_URL }}

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
        with:
          enablement: true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./front/build
          if-no-files-found: error

  deploy_pages:
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write

    needs: build_test

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy_vercel:
    runs-on: ubuntu-latest
    needs: build_test

    steps:
      - uses: actions/checkout@v4
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy to prod
        run: vercel --prod --token=${{ secrets.VERCEL_TOKEN }}
